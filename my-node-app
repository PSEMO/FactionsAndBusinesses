# Define the upstream server (your Node.js app)
upstream nodejs_backend {
    server 127.0.0.1:8080;
    keepalive 64;
}

# Define the public-facing server block
server {
    listen 80;
    listen [::]:80;

    server_name _; # Replace with your domain or IP if needed

    # Define the root directory for static files
    root /home/website/FactionsBusinesses;

    # Location block for serving static assets (CSS, JS, Images, Fonts etc.)
    # Try to serve the file directly, otherwise pass to Node.js (via @nodejs)
    location ~ \.(css|js|ico|gif|jpg|jpeg|png|svg|woff|woff2|ttf|eot)$ {
        try_files $uri =404; # Serve the file if it exists, else 404
        expires 1d;          # Cache static files for 1 day in browser
        add_header Cache-Control "public";
    }

    # Define what happens for requests matching the root path '/'
    # and any other paths not matched above (e.g., API endpoints, HTML pages serv>
    location / {
        # If serving index.html directly via Nginx AND Node handles API/dynamic r>
        # try_files $uri $uri/ @nodejs;

        # --- OR --- (More likely based on your setup)
        # If Node.js serves ALL non-static content (including index.html)
        proxy_pass http://nodejs_backend;

        # Headers to pass important information to Node
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket support (keep this)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Optional: Define the named location for Node.js fallback if using try_files>
    # location @nodejs {
    #     proxy_pass http://nodejs_backend;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "upgrade";
    # }

    # Configure logging
    access_log /var/log/nginx/my-node-app.access.log;
    error_log /var/log/nginx/my-node-app.error.log;
}
